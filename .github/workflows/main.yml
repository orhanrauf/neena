# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Neena Core
on:
  workflow_dispatch:

jobs:

  terraform:
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.DEPLOYMENT_SP_CLIENT_ID }}",
            "clientSecret": "${{ secrets.DEPLOYMENT_SP_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.TENANT_ID }}"
          }
          
    - name: Get storage account key
      id: get_storage_key
      run: |
        az storage account keys list --resource-group ${{secrets.TF_STATE_RG}} --account-name ${{secrets.TF_STATE_STORAGE_ACC}} --query '[0].value' --output tsv
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        ARM_CLIENT_ID: ${{ secrets.DEPLOYMENT_SP_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.DEPLOYMENT_SP_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
        ARM_ACCOUNT_KEY: ${{ steps.get_storage_key.outputs.value }}
        
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Python version
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: '3.10'

  #     - name: Create and start virtual environment
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate
      
  #     - name: Install dependencies
  #       run: pip install -r requirements.txt
  #       working-directory: 'src'
        
  #     # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      
  #     - name: Upload artifact for deployment jobs
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: python-app
  #         path: |
  #           src
  #           !venv/

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: python-app
  #         path: .
          
  #     - name: 'Deploy to Azure Web App'
  #       uses: azure/webapps-deploy@v2
  #       id: deploy-to-webapp
  #       with:
  #         app-name: 'mywebapp-sample'
  #         slot-name: 'Production'
  #         publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D59AF6F7FC3548B0B22238403786E552 }}
