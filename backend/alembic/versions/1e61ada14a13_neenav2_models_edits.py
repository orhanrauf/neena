from alembic import op
import sqlalchemy as sa

from app.models.task_run import ArgumentType
# revision identifiers, used by Alembic.
revision = '1e61ada14a13'
down_revision = '749cc48d9e12'
branch_labels = None
depends_on = None

flow_status_enum = sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='flowstatus')
task_status_enum = sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='taskstatus')

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    flow_status_enum.create(op.get_bind(), checkfirst=True)
    task_status_enum.create(op.get_bind(), checkfirst=True)
    
    op.alter_column('flow_run', 'status',
                    existing_type=sa.VARCHAR(),
                    type_=flow_status_enum,
                    existing_nullable=False,
                    postgresql_using='status::text::flowstatus')
    
    op.add_column('task_run', sa.Column('status', task_status_enum, nullable=False))
    
    # Assuming 'arguments' column and its type is correctly defined in your model
    op.add_column('task_run', sa.Column('arguments', ArgumentType(), nullable=False))
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('task_run', 'arguments')
    
    op.drop_column('task_run', 'status')
    op.alter_column('flow_run', 'status',
                    existing_type=flow_status_enum,
                    type_=sa.VARCHAR(),
                    existing_nullable=False,
                    postgresql_using='status::text')
    
    op.execute('DROP TYPE taskstatus')
    op.execute('DROP TYPE flowstatus')
    # ### end Alembic commands ###
